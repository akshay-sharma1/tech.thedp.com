{"version":3,"sources":["webpack:///./src/pages/team.js"],"names":["CardWrapper","s","Row","WHITE","CardTitle","p","POPPINS_BOLD","CardDescription","div","POPPINS_LIGHT","Card","name","tags","img","emoji","from","style","marginRight","md","fluid","childImageSharp","borderRadius","border","RED","map","tag","bgColor","RED_PERCENT","SectionWrapper","idx","LIGHT_BLUE","Members","members","member","TeamTitle","h2","POPPINS_SEMI_BOLD","TeamDescription","PageDescription","Teams","teams","useStaticQuery","allFile","edges","node","childrenTeamJson","marginTop","textAlign","team","description"],"mappings":"2FAAA,yIAUMA,EAAcC,YAAEC,KAAL,wEAAGD,CAAH,8OACKE,KAiBhBC,EAAYH,IAAEI,EAAL,sEAAGJ,CAAH,yBAEXK,KAGEC,EAAkBN,IAAEO,IAAL,4EAAGP,CAAH,2BACjBQ,KAIEC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,IAAKC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACX,kBAACf,EAAD,CAAagB,MAAO,CAAEC,YAAa,SACjC,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CACEC,MAAON,EAAIO,gBAAgBD,MAC3BH,MAAO,CAAEK,aAAc,MAAOC,OAAO,aAAcC,QAGvD,kBAAC,IAAD,CAAKL,GAAI,GACP,kBAACd,EAAD,KACGO,EADH,IACUG,GAETF,EAAKY,KAAI,SAAAC,GAAG,OACX,kBAAC,IAAD,CAAOC,QAASC,YAAY,MAA5B,IAAqCF,EAArC,QAEF,kBAAClB,EAAD,cAAwBQ,EAAxB,QAKAa,EAAiB3B,IAAEO,IAAL,2EAAGP,CAAH,8JACE,qBAAG4B,IAAiB,GAAM,EAAIC,IAAa3B,OAU3D4B,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACd,kBAAC,IAAD,KACGA,EAAQR,KAAI,SAAAS,GAAM,OACjB,kBAAC,IAAD,CAAKf,GAAI,GACP,kBAACR,EAASuB,SAMZC,EAAYjC,IAAEkC,GAAL,sEAAGlC,CAAH,QACXmC,KAGEC,EAAkBpC,IAAEI,EAAL,4EAAGJ,CAAH,qFACjBQ,KASE6B,EAAkBrC,IAAEI,EAAL,4EAAGJ,CAAH,kJACjBK,KAuEWiC,UA1DD,WACZ,IA8B4BC,EA9BfC,yBAAe,cA+BnBC,QAAQC,MAAM,GADrBC,KAAQC,iBAGV,OACE,kBAAC,IAAD,KACE,yBAAK7B,MAAO,CAAE8B,UAAW,SACvB,yBAAK9B,MAAO,CAAE+B,UAAW,WACvB,kBAAC,IAAD,wBACA,kBAACT,EAAD,iPAODE,EAAMhB,KAAI,SAACwB,EAAMnB,GAAP,OACT,kBAACD,EAAD,CAAgBC,IAAKA,GACnB,kBAACK,EAAD,KAAYc,EAAKrC,MACjB,kBAAC0B,EAAD,KAAkBW,EAAKC,aACvB,kBAAClB,EAAD,CAASC,QAASgB,EAAKhB","file":"component---src-pages-team-js-caf47cb9abeb5716ce62.js","sourcesContent":["import React from 'react'\nimport s from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { Row, Col } from 'react-bootstrap'\n\nimport { Container, PageTitle, Badge } from '../components'\nimport { LIGHT_BLUE, WHITE, RED, RED_PERCENT } from '../styles/constants'\nimport { POPPINS_SEMI_BOLD, POPPINS_LIGHT, POPPINS_BOLD } from '../styles/fonts'\n\nconst CardWrapper = s(Row)`\n  background-color: ${WHITE};\n  border-radius: 24px;\n  box-shadow: 0px 0px 15px rgba(0,0,0,0.06);\n  padding: 2rem 1rem;\n  margin-top: 2rem;\n\n  :hover {\n    transform: scale(1.01);\n  }\n  transition: all 0.3s;\n  overflow: hidden;\n\n  @media screen and (max-width: 768px) {\n    padding: 2rem 0;\n  }\n`\n\nconst CardTitle = s.p`\n  font-size: 1.4rem;\n  ${POPPINS_BOLD}\n`\n\nconst CardDescription = s.div`\n  ${POPPINS_LIGHT}\n  margin-top: 4.5rem;\n`\n\nconst Card = ({ name, tags, img, emoji, from }) => (\n  <CardWrapper style={{ marginRight: '1rem' }}>\n    <Col md={6}>\n      <Img\n        fluid={img.childImageSharp.fluid}\n        style={{ borderRadius: '50%', border: `5px solid ${RED}` }}\n      />\n    </Col>\n    <Col md={6}>\n      <CardTitle>\n        {name} {emoji}\n      </CardTitle>\n      {tags.map(tag => (\n        <Badge bgColor={RED_PERCENT(0.32)}> {tag} </Badge>\n      ))}\n      <CardDescription> from {from} </CardDescription>\n    </Col>\n  </CardWrapper>\n)\n\nconst SectionWrapper = s.div`\n  background-color: ${({ idx }) => (idx % 2 === 0 ? LIGHT_BLUE : WHITE)};\n  padding: 4rem 7rem;\n  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);\n\n  @media screen and (max-width: 768px) {\n    padding: 4rem 1rem;\n    text-align: center;\n  }\n`\n\nconst Members = ({ members }) => (\n  <Row>\n    {members.map(member => (\n      <Col md={4}>\n        <Card {...member} />\n      </Col>\n    ))}\n  </Row>\n)\n\nconst TeamTitle = s.h2`\n  ${POPPINS_SEMI_BOLD}\n`\n\nconst TeamDescription = s.p`\n  ${POPPINS_LIGHT}\n  width: 40%;\n  margin-top: 0.9rem;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nconst PageDescription = s.p`\n  ${POPPINS_BOLD}\n  margin-top: 2rem;\n  padding: 0 25rem;\n\n  @media screen and (max-width: 992px) {\n    padding: 0 10rem;\n  }\n\n  @media screen and (max-width: 667px) {\n    padding: 0 1rem;\n  }\n`\n\nconst Teams = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { relativePath: { eq: \"team.json\" } }) {\n        edges {\n          node {\n            childrenTeamJson {\n              name\n              description\n              members {\n                name\n                tags\n                emoji\n                from\n                img {\n                  childImageSharp {\n                    fluid(maxWidth: 1000, maxHeight: 1000) {\n                      ...GatsbyImageSharpFluid\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const {\n    node: { childrenTeamJson: teams }\n  } = data.allFile.edges[0]\n\n  return (\n    <Container>\n      <div style={{ marginTop: '2rem' }}>\n        <div style={{ textAlign: 'center' }}>\n          <PageTitle> Meet the Team </PageTitle>\n          <PageDescription>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat.\n          </PageDescription>\n        </div>\n        {teams.map((team, idx) => (\n          <SectionWrapper idx={idx}>\n            <TeamTitle>{team.name}</TeamTitle>\n            <TeamDescription>{team.description}</TeamDescription>\n            <Members members={team.members} />\n          </SectionWrapper>\n        ))}\n      </div>\n    </Container>\n  )\n}\n\nexport default Teams\n"],"sourceRoot":""}