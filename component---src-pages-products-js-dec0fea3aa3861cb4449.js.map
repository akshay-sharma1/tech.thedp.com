{"version":3,"sources":["webpack:///./src/pages/products.js"],"names":["CardWrapper","s","div","attrs","className","flush","fixed","CardHeader","h2","POPPINS_MEDIUM","Content","p","POPPINS_REGULAR","getBgColor","idx","color0","color1","bgColor","Math","floor","ImgWrapper","BLUE_PERCENT","RED_PERCENT","CardContent","name","link","description","img","fluid","childImageSharp","style","width","display","margin","href","paddingRight","BLUE","RED","color","floatRight","Card","children","PageTitle","h1","POPPINS_BOLD","PageDescription","Products","products","useStaticQuery","allFile","edges","node","childrenProductsJson","padding","md","map","product"],"mappings":"2FAAA,yIAaMA,EAAcC,IAAEC,IAAIC,OAAM,kBAAoB,CAClDC,UAD8B,EAAGA,cAAlB,wEAAGH,CAAH,qLAHN,UACK,mCAWZ,qBAAGI,OAAiB,2BACpB,qBAAGC,OACE,gDASHC,EAAaN,IAAEO,GAAL,uEAAGP,CAAH,uEAKZQ,KAGEC,EAAUT,IAAEU,EAAL,oEAAGV,CAAH,qFAMTW,KAGEC,EAAa,SAACC,EAAKC,EAAQC,GAC/B,IACIC,EAAUH,EAAM,GAAM,EAAIC,EAASC,EAUvC,OAXaE,KAAKC,MAAML,EAAM,GAAK,GAAM,IAKrCG,EADEA,IAAYF,EACJC,EAEAD,GAIPE,GAGHG,EAAanB,IAAEC,IAAL,uEAAGD,CAAH,0CACM,gBAAGa,EAAH,EAAGA,IAAH,OAClBD,EAAWC,EAAKO,YAAa,IAAMC,YAAY,SAI7CC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,IAAKb,EAAjC,EAAiCA,IAAjC,OAClB,oCACE,kBAACM,EAAD,CAAYN,IAAKA,GACf,kBAAC,IAAD,CACEc,MAAOD,EAAIE,gBAAgBD,MAC3BE,MAAO,CAAEC,MAAO,QAASC,QAAS,QAASC,OAAQ,aAGvD,kBAAC1B,EAAD,CAAY2B,KAAMT,GAAOD,GACzB,kBAACd,EAAD,KACE,uBAAGoB,MAAO,CAAEK,aAAc,SAAWT,EAArC,KACA,kBAAC,IAAD,CAAST,QAASJ,EAAWC,EAAKsB,IAAMC,KAAMC,MAxEzC,UAwEuDC,YAAU,OAKtEC,EAAO,SAAC,GAAD,IAAGpC,EAAH,EAAGA,UAAWqC,EAAd,EAAcA,SAAUpC,EAAxB,EAAwBA,MAAxB,OACX,kBAACL,EAAD,CAAaI,UAAWA,EAAWC,MAAOA,GACvCoC,IAICC,EAAYzC,IAAE0C,GAAL,sEAAG1C,CAAH,8EACX2C,KAQEC,EAAkB5C,IAAEU,EAAL,4EAAGV,CAAH,yCAGjBW,KA4DWkC,UAzDE,WACf,IAyBgCC,EAzBnBC,yBAAe,cA0BnBC,QAAQC,MAAM,GADrBC,KAAQC,qBAGV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKtB,MAAO,CAAEuB,QAAS,SAAUpB,OAAQ,kBACvC,kBAAC,IAAD,CAAKqB,GAAI,GACP,kBAACZ,EAAD,uBACA,kBAACG,EAAD,iPAOF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGE,EAASQ,KAAI,SAACC,EAAS1C,GAAV,OACZ,kBAAC,IAAD,CAAKwC,GAAI,GACP,kBAACd,EAAD,KACE,kBAACjB,EAAD,iBAAiBiC,EAAjB,CAA0B1C,IAAKA","file":"component---src-pages-products-js-dec0fea3aa3861cb4449.js","sourcesContent":["import React from 'react'\nimport s from 'styled-components'\nimport Img from 'gatsby-image'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Row, Col } from 'react-bootstrap'\n\nimport { Container, Chevron } from '../components'\nimport { POPPINS_MEDIUM, POPPINS_REGULAR, POPPINS_BOLD } from '../styles/fonts'\nimport { BLUE_PERCENT, RED_PERCENT, BLUE, RED } from '../styles/constants'\n\nconst WHITE = `#FFFFFF`\nconst BOX_SHADOW = `0px 5px 20px rgba(0, 0, 0, 0.1)`\n\nconst CardWrapper = s.div.attrs(({ className }) => ({\n  className\n}))`\n  background-color: ${WHITE};\n  border-radius: 15px;\n  box-shadow: ${BOX_SHADOW};\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  ${({ flush }) => flush || `padding-bottom: 30px;`}\n  ${({ fixed }) =>\n    fixed ||\n    `:hover {\n    transform: scale(1.01);\n  }`}\n  transition: all 0.3s;\n  margin-bottom: 60px;\n  overflow: hidden;\n`\n\nconst CardHeader = s.h2`\n  margin-right: 40px;\n  margin-left: 40px;\n  margin-top: 30px;\n  color: black;\n  ${POPPINS_MEDIUM}\n`\n\nconst Content = s.p`\n  margin-right: 40px;\n  margin-left: 40px;\n  color: black;\n  font-size: 90%;\n  margin-top: 4rem;\n  ${POPPINS_REGULAR}\n`\n\nconst getBgColor = (idx, color0, color1) => {\n  const flip = Math.floor(idx / 2) % 2 !== 0\n  let bgColor = idx % 2 === 0 ? color0 : color1\n\n  if (flip) {\n    if (bgColor === color0) {\n      bgColor = color1\n    } else {\n      bgColor = color0\n    }\n  }\n\n  return bgColor\n}\n\nconst ImgWrapper = s.div`\n  background-color: ${({ idx }) =>\n    getBgColor(idx, BLUE_PERCENT(0.1), RED_PERCENT(0.32))};\n  padding: 2rem 0;\n`\n\nconst CardContent = ({ name, link, description, img, idx }) => (\n  <>\n    <ImgWrapper idx={idx}>\n      <Img\n        fluid={img.childImageSharp.fluid}\n        style={{ width: '280px', display: 'block', margin: '0 auto' }}\n      />\n    </ImgWrapper>\n    <CardHeader href={link}>{name}</CardHeader>\n    <Content>\n      <p style={{ paddingRight: '1rem' }}>{description} </p>\n      <Chevron bgColor={getBgColor(idx, BLUE, RED)} color={WHITE} floatRight />\n    </Content>\n  </>\n)\n\nconst Card = ({ className, children, flush }) => (\n  <CardWrapper className={className} flush={flush}>\n    {children}\n  </CardWrapper>\n)\n\nconst PageTitle = s.h1`\n  ${POPPINS_BOLD}\n  font-size: 4rem;\n\n  @media screen and (max-width: 768px) {\n    font-size: 2.5rem;\n  }\n`\n\nconst PageDescription = s.p`\n  font-size: 0.9rem;\n  margin-top: 2rem;\n  ${POPPINS_REGULAR}\n`\n\nconst Products = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { relativePath: { eq: \"products.json\" } }) {\n        edges {\n          node {\n            childrenProductsJson {\n              img {\n                childImageSharp {\n                  fluid(maxWidth: 1100) {\n                    ...GatsbyImageSharpFluid\n                    src\n                  }\n                }\n              }\n              name\n              description\n              link\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const {\n    node: { childrenProductsJson: products }\n  } = data.allFile.edges[0]\n\n  return (\n    <Container>\n      <Row style={{ padding: '0 3rem', margin: '5rem 0 2rem 0' }}>\n        <Col md={4}>\n          <PageTitle> Our Products </PageTitle>\n          <PageDescription>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat.\n          </PageDescription>\n        </Col>\n        <Col>\n          <Row>\n            {products.map((product, idx) => (\n              <Col md={6}>\n                <Card>\n                  <CardContent {...product} idx={idx} />\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Products\n"],"sourceRoot":""}